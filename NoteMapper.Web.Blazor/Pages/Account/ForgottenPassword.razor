@page "/account/password/forgotten"
@inherits NoteMapperComponentBase
@attribute [AllowAnonymous]

@using NoteMapper.Core
@using NoteMapper.Services.Users
@using NoteMapper.Web.Blazor.Models.Account
@using NoteMapper.Web.Blazor.Models
@using NoteMapper.Web.Blazor.Shared.Components
@using NoteMapper.Web.Blazor.Shared.Layouts

<ContentPage>
    <h1>Reset your password</h1>

    <Feedback Model="@Feedback" />

    @if (Feedback == null || Feedback.Type != FeedbackType.Success)
    {
        <p>
            Use the form below to send a password reset link to your registered email address.
        </p>

        <EditForm Model="@Model" OnValidSubmit="@HandleValidSubmitAsync">
            <DataAnnotationsValidator />

            <fieldset disabled="@Loading">
                <div class="mb-3">
                    <label for="email" class="form-label required">Email</label>
                    <InputText id="email" @bind-Value="Model.Email" class="form-control" />
                    <ValidationMessage For="() => Model.Email" />
                </div>

                <div>
                    <button type="submit" class="btn btn-primary">
                        Send link
                        @if(Loading)
                        {
                            <ButtonSpinner />
                        }
                    </button>
                </div>
            </fieldset>
        </EditForm>
    }
    else
    {
        <button class="btn btn-outline-secondary" @onclick="() => Feedback = null">Back</button>
    }
</ContentPage>

@code {
    bool Loading { get; set; }

    ForgottenPasswordViewModel Model { get; set; } = new();

    private async Task HandleValidSubmitAsync()
    {
        Loading = true;
        await InvokeAsync(StateHasChanged);

        ServiceResult result = await IdentityService.RequestPasswordResetAsync(Model.Email);
        Feedback = FeedbackViewModel.FromServiceResult(result);

        Loading = false;
        await InvokeAsync(StateHasChanged);
    }
}
